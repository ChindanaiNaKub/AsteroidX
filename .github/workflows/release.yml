name: Release builds
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-package:
    name: Build and package (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Build with Maven
        working-directory: AsteriodDemo
        run: mvn -B -DskipTests package

      - name: Determine version
        id: vars
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
          else
            VERSION="0.0.0"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create app-image with jpackage
        shell: bash
        run: |
          APP_NAME="AsteroidX"
          INPUT_DIR="AsteriodDemo/target"
          MAIN_JAR="AsteriodDemo-1.0-SNAPSHOT-jar-with-dependencies.jar"
          MAIN_CLASS="se233.asterioddemo.JARLauncher"
          OUT_DIR="dist"
          mkdir -p "$OUT_DIR"
          jpackage \
            --type app-image \
            --name "$APP_NAME" \
            --input "$INPUT_DIR" \
            --main-jar "$MAIN_JAR" \
            --main-class "$MAIN_CLASS" \
            --app-version "${{ steps.vars.outputs.version }}" \
            --dest "$OUT_DIR"

      - name: Archive app-image (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          tar -czf AsteroidX-linux.tar.gz -C dist AsteroidX

      - name: Archive app-image (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          # macOS app-image is an .app bundle
          ditto -c -k --sequesterRsrc --keepParent dist/AsteroidX.app AsteroidX-macOS.zip

      - name: Archive app-image (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path "dist/AsteroidX" -DestinationPath "AsteroidX-Windows.zip" -Force

      - name: Upload app-image to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            AsteroidX-linux.tar.gz
            AsteroidX-macOS.zip
            AsteroidX-Windows.zip

      - name: Upload fat JAR (Linux only)
        if: runner.os == 'Linux' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            AsteriodDemo/target/AsteriodDemo-1.0-SNAPSHOT-jar-with-dependencies.jar


